package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class GrupoActivosAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGrupoActivosAllPropertiesEquals(GrupoActivos expected, GrupoActivos actual) {
        assertGrupoActivosAutoGeneratedPropertiesEquals(expected, actual);
        assertGrupoActivosAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGrupoActivosAllUpdatablePropertiesEquals(GrupoActivos expected, GrupoActivos actual) {
        assertGrupoActivosUpdatableFieldsEquals(expected, actual);
        assertGrupoActivosUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGrupoActivosAutoGeneratedPropertiesEquals(GrupoActivos expected, GrupoActivos actual) {
        assertThat(expected)
            .as("Verify GrupoActivos auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGrupoActivosUpdatableFieldsEquals(GrupoActivos expected, GrupoActivos actual) {
        assertThat(expected)
            .as("Verify GrupoActivos relevant properties")
            .satisfies(e -> assertThat(e.getNombre()).as("check nombre").isEqualTo(actual.getNombre()))
            .satisfies(e -> assertThat(e.getDisponibilidad()).as("check disponibilidad").isEqualTo(actual.getDisponibilidad()))
            .satisfies(e -> assertThat(e.getIntegridad()).as("check integridad").isEqualTo(actual.getIntegridad()))
            .satisfies(e -> assertThat(e.getConfidencialidad()).as("check confidencialidad").isEqualTo(actual.getConfidencialidad()))
            .satisfies(e -> assertThat(e.getCriticidad()).as("check criticidad").isEqualTo(actual.getCriticidad()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGrupoActivosUpdatableRelationshipsEquals(GrupoActivos expected, GrupoActivos actual) {
        assertThat(expected)
            .as("Verify GrupoActivos relationships")
            .satisfies(e -> assertThat(e.getRiesgos()).as("check riesgos").isEqualTo(actual.getRiesgos()));
    }
}
